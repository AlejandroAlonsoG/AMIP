{'dataset': {'original_size': [1920, 1080],
             'rainy_augmentation_prob': 1,
             'root': '/net/ens/am4ip/datasets/project-dataset',
             'sunny_augmentation_prob': 0,
             'use_general_transforms': True},
 'directories': {'save_model_path': './model.pth'},
 'training': {'batch_size': 16,
              'learning_rate': 0.001,
              'loss': 'CrossEntropy',
              'num_epochs': 100,
              'optimizer': 'Adam'}}
Training samples: 8850
Testing samples: 1485

Start epoch 1/100
{'dataset': {'original_size': [1920, 1080],
             'rainy_augmentation_prob': 0,
             'root': '/net/ens/am4ip/datasets/project-dataset',
             'sunny_augmentation_prob': 1,
             'use_general_transforms': True},
 'directories': {'save_model_path': './model.pth'},
 'training': {'batch_size': 16,
              'learning_rate': 0.001,
              'loss': 'CrossEntropy',
              'num_epochs': 100,
              'optimizer': 'Adam'}}
Training samples: 8960
Testing samples: 1485

Start epoch 1/100
Error loading configuration from configs/conf_101.yaml: CUDA out of memory. Tried to allocate 64.00 MiB. GPU 0 has a total capacity of 7.75 GiB of which 30.12 MiB is free. Process 118290 has 5.23 GiB memory in use. Including non-PyTorch memory, this process has 2.04 GiB memory in use. Of the allocated memory 1.80 GiB is allocated by PyTorch, and 131.74 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
